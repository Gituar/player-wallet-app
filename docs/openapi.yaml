# https://editor.swagger.io/

openapi: 3.0.3
info:
  title: Player Wallet API
  version: 1.0.0
  description: API for managing player wallets and play sessions.
servers:
  - url: http://localhost:3000/
security:
  - bearerAuth: []
paths:
  /players/{playerId}/wallet:
    post:
      summary: Create a wallet for a player
      parameters:
        - in: path
          name: playerId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the player to create a wallet for
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal server error
  /players/{playerId}/sessions:
    post:
      summary: Create a play session for a player
      parameters:
        - in: path
          name: playerId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the player to create a session for
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /sessions/{sessionId}/withdrawals:
    post:
      summary: Make a withdraw or bet transaction in a play session
      parameters:
        - in: path
          name: sessionId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the play session the transaction belongs to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawOrBet'
            examples:
              example1:
                value:
                  amount: 5.00
                  type: withdraw
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /sessions/{sessionId}/deposits:
    post:
      summary: Make a deposit or win transaction in a play session
      parameters:
        - in: path
          name: sessionId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the play session the transaction belongs to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositOrWin'
            examples:
              example1:
                value:
                  amount: 10.00
                  type: deposit
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /players/{playerId}/transactions:
    get:
      summary: Get all transactions for a player
      parameters:
        - in: path
          name: playerId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the player who made the transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /sessions/{sessionId}/transactions:
    get:
      summary: Get all transactions in a play session
      parameters:
        - in: path
          name: sessionId
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of the play session the transaction belongs to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
components:
  schemas:
    WithdrawOrBet:
      type: object
      properties:
        amount:
          type: number
          format: float
          minimum: 0
          description: Amount of the transaction (negative)
          example: 5.0
        type:
          type: string
          enum: [withdraw, bet]
          description: Type of the transaction
          example: withdraw
      required:
        - amount
        - type
    DepositOrWin:
      type: object
      properties:
        amount:
          type: number
          format: float
          minimum: 0
          description: Amount of the transaction (positive)
          example: 10.0
        type:
          type: string
          enum: [deposit, win]
          description: Type of the transaction
          example: deposit
      required:
        - amount
        - type
    Wallet:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          description: ID of the wallet
        player_id:
          type: integer
          minimum: 1
          description: ID of the player
        balance:
          type: string
          format: float
          minimum: 0
          description: Initial balance of the wallet
          example: '0.00'
    Transaction:
      type: object
      properties:
        id:
          type: integer
          description: ID of the transaction
          example: 1
        player_id:
          type: integer
          description: ID of the player
          example: 1
        session_id:
          type: integer
          description: ID of the play session the transaction belongs to
          example: 1
        wallet_id:
          type: integer
          description: ID of the wallet
          example: 1
        amount:
          type: string
          format: float
          description: Amount of the transaction
          example: '5.00'
        type:
          type: string
          enum: [withdraw, bet, deposit, win]
          description: Type of the transaction
          example: deposit
        balance:
          type: string
          format: float
          description: Balance after the transaction
          example: '20.00'
        created_at:
          type: string
          format: date-time
          description: Timestamp of the transaction
          example: '2023-04-13T11:00:00.000Z'
    Session:
      type: object
      properties:
        id:
          type: integer
          description: ID of the session
          example: 1
        player_id:
          type: integer
          description: ID of the player
          example: 1
        created_at:
          type: string
          format: date-time
          description: Start time of the session
          example: '2023-04-13T10:00:00.000Z'
        ended_at:
          type: string
          format: date-time
          description: End time of the session (null if ongoing)
          example: '2023-04-13T12:00:00.000Z'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT